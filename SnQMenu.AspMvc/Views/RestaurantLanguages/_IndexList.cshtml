@*@CustomerCode*@
@{
    @using SnQMenu.AspMvc.Models.Modules.Common;
    @using SnQMenu.AspMvc.Models.Modules.View
    @using SnQMenu.AspMvc.Modules.Handler
    @using SnQMenu.AspMvc.Modules.Language
    @using SnQMenu.AspMvc.Modules.Session
    @using SnQMenu.AspMvc.Modules.View
    @model IEnumerable<SnQMenu.AspMvc.Models.IdentityModel>

    var viewBagInfo = new ViewBagWrapper(ViewBag);
    var sessionInfo = new SessionWrapper(Context.Session);

    viewBagInfo.Translate = Translator.TranslateIt;
    viewBagInfo.Controller = ViewContext.RouteData.Values["controller"].ToString();
    viewBagInfo.Action = ViewContext.RouteData.Values["action"].ToString();

    var indexViewModel = default(IndexViewModel);

    //if (Model is IEnumerable<IMasterDetails> mds)
    //{
    //    var models = mds.Select(m => m.Master);

    //    if (models.Any())
    //    {
    //        indexViewModel = viewBagInfo.CreateIndexViewModel(models);
    //    }
    //    viewBagInfo.CommandMode |= SnQMenu.AspMvc.Models.Modules.Common.CommandMode.CreateDetail;
    //}
    //else
    //{
    //    indexViewModel = viewBagInfo.CreateIndexViewModel(Model);
    //}

    if (indexViewModel != null)
    {
        @foreach (var model in indexViewModel.Models)
        {
            model.ViewBagInfo = viewBagInfo;
            <div class="card" style="margin-bottom: 1em;">
                <ul class="list-group list-group-flush">
                    @foreach (var item in indexViewModel.GetDisplayProperties())
                    {
                        <li class="list-group-item"><strong>@viewBagInfo.TranslateFor(indexViewModel.GetLabel(item))</strong><p>@indexViewModel.GetDisplayValue(model, item)</p></li>
                    }
                </ul>
                <div class="card-body">
                    @await Html.PartialAsync("_CommandControl", model)
                </div>
            </div>
        }
    }
}
